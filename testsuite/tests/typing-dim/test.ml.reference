
#                                       module Dim :
  sig
    type 'a dfloat = private float
    val create : float -> dfloat ['a]
    val ( +: ) : dfloat ['a] -> dfloat ['a] -> dfloat ['a]
    val ( *: ) : dfloat ['a] -> dfloat ['b] -> dfloat ['a * 'b]
    val ( /: ) : dfloat ['a] -> dfloat ['b] -> dfloat ['a / 'b]
    val inv : dfloat ['a] -> dfloat ['a ^ -1]
    val dsqrt : dfloat ['a ^ 2] -> dfloat ['a]
  end
#   # type dlist = list [l]
# val x : Dim.dfloat [m] = 3.
# val y : Dim.dfloat [m] = 4.
# - : bool = false
#   val div : Dim.dfloat ['a] -> Dim.dfloat ['b] -> Dim.dfloat ['a / 'b] = <fun>
#   val lcm :
  Dim.dfloat ['a ^ 15] ->
  Dim.dfloat ['a ^ 10] -> Dim.dfloat ['a ^ 6] -> Dim.dfloat ['a ^ 30] = <fun>
#   val lcm_bis :
  Dim.dfloat ['a ^ 15] ->
  Dim.dfloat ['a ^ 10] -> Dim.dfloat ['a ^ 6] -> Dim.dfloat ['a ^ 30] = <fun>
#           val prodlist :
  Dim.dfloat ['a] list -> Dim.dfloat ['b] list -> Dim.dfloat ['a * 'b] list =
  <fun>
#   val f : 'a option -> Dim.dfloat ['a] option = <fun>
# - : Dim.dfloat ['<bad unit variable>] option = None
#     Characters 43-84:
    struct let v : dfloat [k] = create 1. end;;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error: Signature mismatch:
       Modules do not match:
         sig val v : Dim.dfloat [k] end
       is not included in
         sig val v : Dim.dfloat [m] end
       Values do not match:
         val v : Dim.dfloat [k]
       is not included in
         val v : Dim.dfloat [m]
# 
